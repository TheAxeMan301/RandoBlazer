#include "Lairs.h"
#include "Sprite.h"

#include <iostream>

Sprite::Sprite() {
    Address     = 0x00;
    Act         = ActID::ACT_1;
    x           = 0;
    y           = 0;
    Orientation = 0x01;
    Enemy       = EnemyType::NO_ENEMY;
}

Sprite::~Sprite() {}

/*
    This is for enemies not attached to a lair
*/
int SpriteDataAddressList[7][63] = {
    {0x9CCA, 0x9CCE, 0x9CD2, 0x9CD6, 0x9CDA, 0x9CDE, 0x9CE2, 0x9CE6, 0x9CEA, 0x9CEE,
     0x9CF2, 0x9D1B, 0x9D1F, 0x9D23, 0x9D27, 0x9D2B, 0x9D2F, 0x9D33, 0x9D37, 0x9D3B,
     0x9D3F, 0x9D43, 0x9D47, 0x9D4B, 0x9D4F, 0x9D53, 0x9D57},
    {0x9F01, 0x9F05, 0x9F09, 0x9F0D, 0x9F11, 0x9F15, 0x9F19, 0x9F1D, 0x9F21, 0x9F25,
     0x9F29, 0x9F2D, 0x9F31, 0x9F35, 0x9F6A, 0x9F6E, 0x9F72, 0x9F76, 0x9F93, 0x9F97,
     0x9F9B, 0x9F9F, 0x9FA3, 0x9FA7, 0x9FAB},
    {0xA11C, 0xA120, 0xA124, 0xA128, 0xA12C, 0xA130, 0xA194, 0xA198, 0xA19C, 0xA1A0,
     0xA1A4, 0xA1A8, 0xA1AC, 0xA1B0, 0xA1B4, 0xA1B8, 0xA1D1, 0xA1D5, 0xA1D9, 0xA1DD,
     0xA1E1, 0xA1E5, 0xA1E9, 0xA1ED, 0xA202, 0xA206, 0xA20A, 0xA20E, 0xA212, 0xA243,
     0xA247, 0xA24B, 0xA24F, 0xA253, 0xA28C, 0xA290, 0xA294, 0xA298},
    {0xA3B9, 0xA3BD, 0xA3C1, 0xA3C5, 0xA3C9, 0xA407, 0xA40B, 0xA40F, 0xA413, 0xA42C,
     0xA430, 0xA434, 0xA438, 0xA47B, 0xA47F, 0xA498, 0xA49C, 0xA4A0, 0xA4A4, 0xA4C5,
     0xA4C9, 0xA4CD, 0xA4D1, 0xA4D5, 0xA4D9, 0xA4DD, 0xA4E1},
    {0xA608, 0xA60C, 0xA610, 0xA614, 0xA618, 0xA61C, 0xA63D, 0xA641, 0xA645, 0xA649,
     0xA64D, 0xA651},
    {0xA6CB, 0xA6CF, 0xA6D3, 0xA6D7, 0xA6DB, 0xA6DF, 0xA6E3, 0xA6E7, 0xA6EB, 0xA6EF,
     0xA6F3, 0xA708, 0xA70C, 0xA710, 0xA714, 0xA718, 0xA71C, 0xA751, 0xA755, 0xA759,
     0xA75D, 0xA761, 0xA765, 0xA77F, 0xA783, 0xA787, 0xA78B, 0xA78F, 0xA793, 0xA797,
     0xA79B, 0xA79F, 0xA7A3, 0xA7A7, 0xA7AB, 0xA7BC, 0xA7C0, 0xA7C4, 0xA7C8, 0xA7CC,
     0xA7D0, 0xA7D4, 0xA7D8, 0xA7F6, 0xA7FA, 0xA7FE, 0xA802, 0xA806, 0xA80A, 0xA81B,
     0xA81F, 0xA823, 0xA827, 0xA834, 0xA838, 0xA83C, 0xA840, 0xA844, 0xA848, 0xA84C,
     0xA850, 0xA861, 0xA865},                                /* leave these 3 bricks for grinding */
    {0xA946, 0xA94A, 0xA94E, 0xA952, 0xA956, 0xA95A, 0xA95E, /*0xA987, 0xA98B, 0xA98F,*/
     0xA993, 0xA997, 0xA99B, 0xA99F, 0xA9A3, 0xA9A7}
};

void GetOriginalMapSpriteData (Sprite SpriteList[], std::fstream &ROMFile) {
    int SpriteIndex = 0;
    for (int Act = (int)ActID::ACT_1; Act < (int)ActID::ACT_MAX; ++Act) {
        for (int AddressIndex = 0; AddressIndex < 63; ++AddressIndex) {
            if (SpriteDataAddressList[Act][AddressIndex] == 0) {
                break;
            }
            SpriteList[SpriteIndex].Address = SpriteDataAddressList[Act][AddressIndex];
            SpriteList[SpriteIndex].Act = (ActID)Act;

            ROMFile.seekg(SpriteDataAddressList[Act][AddressIndex], std::ios::beg);
            ROMFile.read((char*)(&(SpriteList[SpriteIndex].x)), 1);
            ROMFile.read((char*)(&(SpriteList[SpriteIndex].y)), 1);
            ROMFile.read((char*)(&(SpriteList[SpriteIndex].Orientation)), 1);
            ROMFile.read((char*)(&(SpriteList[SpriteIndex].Enemy)), 1);
            SpriteIndex++;
        }
    }
}
